        -:    0:Source:sellProduct.c
        -:    0:Graph:a-sellProduct.gcno
        -:    0:Data:a-sellProduct.gcda
        -:    0:Runs:2
        -:    1:#include <header.h>
        -:    2:
        1:    3:ITEM saleProduct()
        -:    4:{
        1:    5:    char prod_code[4] = {0};
        -:    6:    char name[30];
        1:    7:    int quantity = 0, size = 0, count = 1;
        1:    8:    int total = 0, gtotal = 0;
        -:    9:    int availableC, qty;
        -:   10:    SALE sale;
        -:   11:    ITEM item;
        -:   12:    FILE *fp;
        -:   13:    FILE *file;
        -:   14:    
        1:   15:    printf("\nEnter Customer Name: ");
        1:   16:    scanf("%s",name);
        -:   17:    
        1:   18:    fp = fopen(name, "wb");
        1:   19:    file = fopen("Record.txt", "r+b");
        -:   20:    
        1:   21:    if(file==NULL)
        -:   22:    {
    #####:   23:    	printf("\nNot a existing customer.");
    #####:   24:    	addCustomer();
        -:   25:	}
        1:   26:    printf("\v\v\t\t\t\t\t\t\tSale Product\n");
        1:   27:    printf("\t\t\t\t\t\t**********\n");
        1:   28:    printf("\t\t\t\t\tEnter  \" end \" to finish input");
        1:   29:    qty = item.quantity;
        1:   30:    rewind(file);
        -:   31:    
        -:   32:    while (1)
        -:   33:    {
        1:   34:        printf("                    ");
        1:   35:        printf("                    ");
        1:   36:        printf("\n\v\t\t\t\tEnter Item Code:");
        1:   37:        scanf("%s", prod_code);
        1:   38:        strcpy(sale.productCode, prod_code);
        1:   39:        if (strcmp(prod_code, "end") == 0)
        -:   40:        {
    #####:   41:            system("clear");
    #####:   42:            break;
        -:   43:        }
        1:   44:        availableC = isCodeAvailable(prod_code);
        1:   45:        if (availableC == 0)
        -:   46:        {
    #####:   47:            system("clear");
    #####:   48:            printf("\033[1;31m");
    #####:   49:            printf("\n\v\t\t\t\t\t\t* no Product is found.\n");
    #####:   50:            printf("\033[0m");
    #####:   51:            options();
        -:   52:        }
        -:   53:
        1:   54:        printf("\t\t\t\tEnter Quantity:");
        1:   55:        scanf("%d", &quantity);
        1:   56:        sale.unit = quantity;
        1:   57:        qty = qty - quantity;
        1:   58:        if (qty < 0)
        -:   59:        {
        1:   60:            system("clear");
        1:   61:            printf("\033[1;31m");
        1:   62:            system("clear");
        1:   63:            printf("\n\t\t\t\t\t\t* Out of stock.\n");
        1:   64:            printf("\033[0m");
        1:   65:            break;
        -:   66:        }
    #####:   67:		rewind(file);
    #####:   68:        while (fread(&item, sizeof(item), 1, file))
        -:   69:        {
    #####:   70:            if ((strcmp(item.product_code, prod_code) == 0))
        -:   71:            {
    #####:   72:                total = item.rate * quantity;
    #####:   73:                printf("\n\t\t\t%d ", count);
    #####:   74:                printf("\t\t\t%s ", item.product_name);
    #####:   75:                printf("\t\t\t%d ", quantity);
    #####:   76:                printf("\t\t\t%d ", item.rate);
    #####:   77:                printf("\t\t\t%d ", total);
    #####:   78:                gtotal = gtotal + total;
    #####:   79:                size = sizeof(item);
    #####:   80:                item.quantity = item.quantity - quantity;
    #####:   81:                count++;
    #####:   82:                fseek(file, -size, SEEK_CUR);
    #####:   83:                fwrite(&item, sizeof(item), 1, file);
    #####:   84:                break;
        -:   85:            }
        -:   86:        }
    #####:   87:        fwrite(&sale, sizeof(sale), 1, fp);
        -:   88:    }
        1:   89:    if (gtotal != 0)
        -:   90:    {
    #####:   91:        printf("\n\v\t\t\t\t\t\tTOTAL AMOUNT = Rs. %d", gtotal);
        -:   92:    }
        1:   93:    fclose(file);
        1:   94:    fclose(fp);
        1:   95:    return item;
        -:   96:}
